#!/bin/bash
#

export PATH=/opt/ninjablocks/bin:$PATH
set -o pipefail

usage() {
	cat <<EOF
sphere-ble-reset {command}

where {command} is one of:

	signal-reset
		Issues an initctl emit to restart the entire BLE stack.

	start
		Starts the entire bluetooth stack.

	partial-start
		Starts the entire bluetooth stack upto, but not including the applications

	partial-stop
		Stops the entite bluetooth stack, except the applications.

	stop
		Stops the entire bluetooth stack.

	status
		Reports whether the stack is STARTED or in some other state BAD.

	wait
		Wait until the stack is STARTED.

EOF
}

stop() {
	nservice -q driver-ble-combined stop
	service sphere-setup-assistant stop
	partial-stop
	true
}

partial-stop() {
	service bluetooth stop
	hciconfig hci0 down 1>&2
	rmmod btwilink
	service uim-sysfs stop
	true
}

partial-start() {
	service uim-sysfs start
	modprobe btwilink
	hciconfig hci0 up
	service bluetooth start
}

start() {
	partial-start
	_wait
	service sphere-setup-assistant start
	nservice -q driver-ble-combined start
}

status() {
	local count=$(hciconfig -a 2>/dev/null | egrep -c "Name: 'ninjasphere-0'|UP RUNNING PSCAN")
	if test "$count" -eq 2; then
		echo STARTED
		true
	else
		echo BAD
		hciconfig -a 1>&2
		false
	fi
}

_wait() {
	while ! status 1>&2; do
		sleep 1
	done
	true
}

main() {

	if test "$(whoami)" = "root"; then
		cmd=$1
		shift 1

		case "$cmd" in
		signal-reset)
			initctl emit ble-reset-required
		;;
		stop)
			stop "$@"
		;;
		start)
			start "$@"
		;;
		partial-start)
			partial-start "$@"
		;;
		partial-stop)
			partial-stop "$@"
		;;
		status)
			status "$@"
		;;
		ble-startup)
			# called when the ble driver starts up
			partial-stop
			partial-start
		;;
		wait)
			_wait "$@"
		;;
		*)
			usage
		;;
		esac
	else
		sudo -u root $0 "$@"
	fi
}

main "$@"